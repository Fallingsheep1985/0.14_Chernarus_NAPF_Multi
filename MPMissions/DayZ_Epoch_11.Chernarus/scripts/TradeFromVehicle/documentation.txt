TradeFromVehicle
Created by Csus.
Big thanks to Mugzy for creating the SQL magic!

How to install on your server -
    Unzip the TradeFromVehicle.zip and place the TradeFromVehicle folder in your mission folder.
	Open up your mission's init.sqf and look for - if (!isDedicated) then { - and place - ExecVM "TradeFromVehicle\init.sqf" - just underneath it.

How to set it up -
    Step 1.
    Put every weapon your traders sell into tfv_TRADERS_PRICES along with a price. (You can use the tfv_EXCHANGE array to help you price them)
    As an example, 1 gold is equal to 100 in tfv_TRADERS_PRICES.

    Step 2.
    For each trader, you need to add their model, weapons and items, what type of things they will sell (weapons/item) and their humanity requirement.
    The format is - ["traders model",["things","they","sell"],["weapons", AND/OR, "items"],humanity]
    To explain the ["weapons","items"] section a little better. 
    For a gun dealer you'll just need to put this as ["weapons"], but for the hero you'll want to use ["weapons","items"] because he sells both.
    Finally, for a medical trader you'll just need to use ["items"]
    For the humanity, you can set it to any value you need. If you don't want a humanity requirement on a trader just set it to 0.

    Step 3.
    Adjusting the tfv_SALES_PER_ANIM and tfv_SALE_PER_ANIM_MAGS variables.
    These control the speed of selling. Basically, for every trade animation played this many weapons or items will be sold.
    So, with the default tfv_SALES_PER_ANIM and a vehicle with 50 weapons it will take 10 stages.
    tfv_SALES_PER_ANIM controls the speed of trading weapons.
    tfv_SALES_PER_ANIM controls the speed of selling items.
	
	
ProTip ladies!
If you have an older version of this already just copy over your tfv_TRADERS_ITEMS and tfv_TRADERS_PRICES and replace the default ones!
Just make the edit on the tfv_TRADERS_ITEMS to add the extra element to the array with the humanity requirement!

ProTip #2!
Use Notepad++. Always. Forever.
You can download it from the official Notepad++ website for free here - http://notepad-plus-plus.org/


Having trouble getting it to work? Here's a few common problems to look for - 
    Problem #1: Not including the 'canBuild' in the sensor for the trader.
	Open up your 'mission.sqm' file and go down to around 1300, it'll be at a slightly different position for every map but it'll be close enough.
	Now, look for this piece of code - class Sensors.
	Below that you'll see a variant of this - 
			class Item0
		{
			position[]={8246.3184,15.544708,15485.867};
			activationBy="WEST";
			repeating=1;
			interruptable=1;
			age="UNKNOWN";
			name="Lenz";
			expCond="(player distance Lenz) < 50;";
			expActiv="TitleText[""Now Entering Trader City Lenzburg"",""PLAIN DOWN""];";// canbuild = false;";
			expDesactiv="TitleText[""Now Leaving Trader City Lenzburg"",""PLAIN DOWN""];";// canbuild = true;";
			class Effects
			{
			};
		};
	This is for Napf, but it will be very similar to this regardless of your map.
	Now, for the 'expActiv' and 'expDesactiv' lines, and - canbuild = false (expActiv) and -canbuild = true (expDesactiv).
	it should now look like this - 
			class Item0
		{
			position[]={8246.3184,15.544708,15485.867};
			activationBy="WEST";
			repeating=1;
			interruptable=1;
			age="UNKNOWN";
			name="Lenz";
			expCond="(player distance Lenz) < 50;";
			expActiv="TitleText[""Now Entering Trader City Lenzburg"",""PLAIN DOWN""]; canbuild = false;";
			expDesactiv="TitleText[""Now Leaving Trader City Lenzburg"",""PLAIN DOWN""]; canbuild = true;";
			class Effects
			{
			};
		};
		
		
    Problem #2: Errors in the init.sqf file.
	Double check that you have all the trader models entered correctly and that you aren't missing a bracket or a comma somewhere.
	


	
Don't want to spend ages typing in all the weapons and items for a trader?
Use this SQL! Massive thanks to Mugzy for creating this!

First you will need a split function: (Run this in your database first to create the function!
/*******************************************************************************************/

    CREATE FUNCTION SPLIT_STR(
    x VARCHAR(255),
    delim VARCHAR(12),
    pos INT
    )
    RETURNS VARCHAR(255)
    RETURN REPLACE(SUBSTRING(SUBSTRING_INDEX(x, delim, pos),
    LENGTH(SUBSTRING_INDEX(x, delim, pos -1)) + 1),
    delim, '');

/*******************************************************************************************/
	
Then just run the query below and copy the results into the init array.
/*******************************************************************************************/
    SELECT item,
    case SPLIT_STR(sell,',',2)
    when '\"ItemGoldBar10oz\"' then
    (concat(SPLIT_STR(item,',',1) ,',',replace(SPLIT_STR(sell,',',1),'[','')*1000,'],') )
    when '\"ItemGoldBar\"' then
    (concat(SPLIT_STR(item,',',1) ,',',replace(SPLIT_STR(sell,',',1),'[','')*100,'],') )
    when '\"ItemSilverBar10oz\"' then
    (concat(SPLIT_STR(item,',',1) ,',',replace(SPLIT_STR(sell,',',1),'[','')*10,'],') )
    when '\"ItemSilverBar\"' then
    (concat(SPLIT_STR(item,',',1) ,',',replace(SPLIT_STR(sell,',',1),'[',''),'],') )
    end as list
    FROM traders_data where afile in ('trade_weapons','trade_items')
    group by item
    order by list 
/*******************************************************************************************/


 	

